from llama_cpp import Llama
import os
import json
import re
import time

MODEL_PATH = os.getenv("LLAMA_MODEL", "/app/models/llama-7b.gguf")
llm = Llama(model_path=MODEL_PATH, n_ctx=2048, n_threads=4, n_batch=128)

EXTRACTION_PROMPT = """
–í—ã–¥–µ–ª–∏ –∏–∑ —Ç–µ–∫—Å—Ç–∞ –¥–æ–≥–æ–≤–æ—Ä–∞ —Å–ª–µ–¥—É—é—â–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON:
- contract_number
- contract_date
- contract_amount
- currency
- deal_type (—ç–∫—Å–ø–æ—Ä—Ç/–∏–º–ø–æ—Ä—Ç)
- tnved_code (–µ—Å–ª–∏ –µ—Å—Ç—å)
- foreign_partner (name, country, swift, address)
- payment_terms (–µ—Å–ª–∏ –µ—Å—Ç—å)

–û—Ç–≤–µ—Ç –Ω–∞—á–Ω–∏ —Å —Å–∏–º–≤–æ–ª–∞ { –∏ –≤–µ—Ä–Ω–∏ —Ç–æ–ª—å–∫–æ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π JSON.
–ï—Å–ª–∏ –Ω–µ –º–æ–∂–µ—à—å ‚Äî –≤–µ—Ä–Ω–∏ {"error": "failed to extract"}.

–¢–µ–∫—Å—Ç:
"""

def extract_contract_parameters(text: str) -> dict:
    print("üß† [LLM] –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –¥–æ–≥–æ–≤–æ—Ä–∞...")
    start = time.time()

    prompt = EXTRACTION_PROMPT + text[:2000]
    result = llm(prompt, stop=["\n\n"], temperature=0.2)
    output = result["choices"][0]["text"].strip()

    print(f"‚è±Ô∏è [LLM] –í—Ä–µ–º—è –∏–Ω—Ñ–µ—Ä–µ–Ω—Å–∞: {time.time() - start:.2f} —Å–µ–∫")
    print(f"üì• [LLM-–æ—Ç–≤–µ—Ç] {output[:200]}...")

    try:
        # –ü–æ–ø—Ä–æ–±—É–µ–º –≤—ã—Ç–∞—â–∏—Ç—å JSON —Ñ—Ä–∞–≥–º–µ–Ω—Ç
        match = re.search(r"{.*}", output, re.DOTALL)
        if not match:
            raise ValueError("–û—Ç–≤–µ—Ç –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç JSON-–±–ª–æ–∫–∞")
        return json.loads(match.group(0))
    except Exception as e:
        raise ValueError(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–∞—Ä—Å–∏–Ω–≥–µ JSON –∏–∑ LLM: {str(e)}\n–û—Ç–≤–µ—Ç: {output}")
